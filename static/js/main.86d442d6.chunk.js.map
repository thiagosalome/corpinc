{"version":3,"sources":["assets/images/loading.gif","assets/images/banner.png","assets/images/banner-mobile.png","assets/images/404.png","services/auth.js","components/Menu/index.jsx","components/Header/index.jsx","components/Loading/index.jsx","services/api.js","components/FormSignup/index.jsx","components/FormSignin/index.jsx","components/Slider/index.jsx","pages/Home/index.jsx","components/Banner/index.jsx","components/FormList/index.jsx","components/List/index.jsx","components/Footer/index.jsx","pages/Admin/index.jsx","pages/Task/index.jsx","pages/404/index.jsx","routes.jsx","App.jsx","index.jsx"],"names":["module","exports","TOKEN_KEY","USER","ID","isAuthenticated","localStorage","getItem","getId","login","token","user","id","setItem","Menu","useState","open","setOpen","showBox","setShowBox","history","useHistory","className","type","onClick","map","value","key","to","title","removeItem","push","Header","Loading","src","loading","alt","api","axios","create","baseURL","interceptors","request","use","a","config","headers","Authorization","FormSignup","handleClick","useForm","register","errors","handleSubmit","buttonLogin","useRef","message","setMessage","showMessage","setShowMessage","setLoading","values","name","email","password","post","username","current","click","useEffect","setTimeout","ref","data-to","onSubmit","method","htmlFor","required","pattern","minLength","disabled","defaultProps","FormSignin","identifier","response","data","jwt","_id","Slider","children","sliderList","sliderListItem","event","index","parseInt","target","getAttribute","translate","offsetWidth","style","transform","item","Home","Banner","media","srcSet","bannerMobile","banner","FormList","formSubmited","setValue","accept","setAccept","formatNumber","number","parseFloat","replace","observation","valor","observacao","validate","greaterThanZero","currencyToNumber","maxLength","onChange","currentTarget","toLocaleString","minimumFractionDigits","rows","List","tasks","length","task","Footer","Admin","setTasks","loadTasks","get","Task","setTask","useParams","loadTask","NotFound","errorImage","PrivateRoute","Component","component","rest","render","props","pathname","HomeRoute","Routes","basename","process","exact","path","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.86d442d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.65978728.gif\";","module.exports = __webpack_public_path__ + \"static/media/banner.aa76c6ef.png\";","module.exports = __webpack_public_path__ + \"static/media/banner-mobile.8042c89c.png\";","module.exports = __webpack_public_path__ + \"static/media/404.fa0b832c.png\";","export const TOKEN_KEY = '@todolist-Token'\nexport const USER = '@todolist-User'\nexport const ID = '@todolist-Id'\nexport const isAuthenticated = () => (\n  localStorage.getItem(TOKEN_KEY) !== null &&\n    localStorage.getItem(USER) !== null &&\n    localStorage.getItem(ID) !== null\n)\nexport const getToken = () => localStorage.getItem(TOKEN_KEY)\nexport const getUser = () => localStorage.getItem(USER)\nexport const getId = () => localStorage.getItem(ID)\nexport const login = (token, user, id) => {\n  localStorage.setItem(TOKEN_KEY, token)\n  localStorage.setItem(USER, user)\n  localStorage.setItem(ID, id)\n}\nexport const logout = () => {\n  localStorage.removeItem(TOKEN_KEY)\n  localStorage.removeItem(USER)\n  localStorage.removeItem(ID)\n}\n","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\n// Services\nimport { getUser, isAuthenticated, logout } from '../../services/auth';\n\n// Styles\nimport './style.scss';\n\n/**\n * Componente de navegação localizado dentro do Header. Junto a ele há um pequeno bloco\n * que é apresentado ao usuário demonstrando que ele está logado.\n */\nconst Menu = () => {\n  const [open, setOpen] = useState(false);\n  const [showBox, setShowBox] = useState(false);\n  const history = useHistory();\n  const items = ['Sobre', 'Produtos', 'Contato'];\n\n  /**\n   * Método responsável por controlar o estado de visibilidade do\n   * menu em dispositivos pequenos.\n   *\n   * @memberof Menu\n   */\n  function handleClick() {\n    setOpen(!open);\n  }\n\n  /**\n   * Método responsável por interceptar o evento do botão de logout e redirecionar\n   * o usuário para a home\n   *\n   * @memberof Menu\n   */\n  function handleClickLogout() {\n    logout();\n    history.push('/');\n  }\n\n  /**\n   * Método responsável por apresentar ao usuário uma caixa com o botão de logout\n   * quando o mesmo clica sobre seu nome no canto superior direito da tela.\n   *\n   * @memberof Menu\n   */\n  function handleClickBox() {\n    setShowBox(!showBox);\n  }\n\n  return (\n    <div className={open ? 'menu open' : 'menu'}>\n      <button type=\"button\" className=\"menu__hamburguer\" onClick={handleClick}>\n        <span>\n          <i />\n          <i />\n          <i />\n        </span>\n        Menu\n      </button>\n      <nav>\n        <ul className=\"menu__list\">\n          {\n            items.map((value) => (\n              <li key={value} className=\"menu__list-item\"><Link to={value} title={value}>{value}</Link></li>\n            ))\n          }\n        </ul>\n      </nav>\n      {\n        isAuthenticated()\n          ? (\n            <div className=\"menu__session\">\n              <button type=\"button\" onClick={handleClickBox} className=\"menu__user\">\n                {getUser()}\n                <span />\n              </button>\n              <div className={`menu__box ${showBox ? 'active' : ''}`}>\n                <button type=\"button\" onClick={handleClickLogout}>Logout</button>\n              </div>\n            </div>\n          )\n          : ''\n      }\n    </div>\n  );\n};\n\nexport default Menu;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n// Components\nimport Menu from '../Menu';\n\n// Styles\nimport './style.scss';\n\n/**\n * Componente Header da aplicação, disponível em todas as páginas\n */\nconst Header = () => (\n  <header className=\"main-header\">\n    <div className=\"main-header__container\">\n      <h1 className=\"main-header__title\">\n        <Link to=\"/\" title=\"CorpInc.\">CorpInc.</Link>\n      </h1>\n      <Menu />\n    </div>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\n\n// Assets\nimport loading from '../../assets/images/loading.gif';\n\n// Styles\nimport './style.scss';\n\nfunction Loading() {\n  return (\n    <div className=\"loading\">\n      <img src={loading} alt=\"Carregando\" title=\"Carregando\" />\n    </div>\n  );\n}\n\nexport default Loading;\n","/* eslint-disable no-param-reassign */\nimport axios from 'axios';\nimport { getToken } from './auth';\n\nconst api = axios.create({\n  baseURL: 'https://api-corpinc.herokuapp.com/',\n});\n\napi.interceptors.request.use(async (config) => {\n  const token = getToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport default api;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\n\n// Components\nimport Loading from '../Loading';\n\n// Services\nimport api from '../../services/api';\n\n// Styles\nimport './style.scss';\n\nconst FormSignup = ({ handleClick }) => {\n  const {\n    register, errors, handleSubmit,\n  } = useForm();\n  const buttonLogin = useRef();\n  const [message, setMessage] = useState('');\n  const [showMessage, setShowMessage] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  /**\n   * Método responsável por realizar o cadastro do usuário\n   *\n   * @memberof FormSignup\n   */\n  async function registerUser(values) {\n    const { name, email, password } = values;\n    try {\n      setLoading(true);\n      await api.post('/auth/local/register', {\n        username: name,\n        email,\n        password,\n      });\n\n      setLoading(false);\n      setMessage('Usuário cadastrado com sucesso.');\n      buttonLogin.current.click();\n    } catch (error) {\n      setLoading(false);\n      setMessage('Erro ao cadastrar');\n    }\n  }\n\n  useEffect(() => {\n    if (message) {\n      setShowMessage(true);\n      setTimeout(() => {\n        setMessage('');\n        setShowMessage(false);\n      }, 3000);\n    }\n  }, [message]);\n\n  return (\n    <div className=\"signup\">\n      <header>\n        <h3>Criar uma conta</h3>\n        <button ref={buttonLogin} type=\"button\" data-to=\"1\" onClick={handleClick}>Acessar</button>\n      </header>\n      <form className=\"form-signup\" onSubmit={handleSubmit(registerUser)} method=\"post\">\n        <div className=\"form-signup__item\">\n          <label htmlFor=\"signup-name\">Nome</label>\n          <input\n            ref={register({\n              required: 'Nome é obrigatório',\n            })}\n            type=\"text\"\n            name=\"name\"\n            id=\"signup-name\"\n          />\n          { errors.name && <p className=\"form-signin__error\">{errors.name.message}</p> }\n        </div>\n        <div className=\"form-signup__item\">\n          <label htmlFor=\"signup-email\">E-mail</label>\n          <input\n            ref={register({\n              required: 'E-mail é obrigatório',\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                message: 'E-mail inválido',\n              },\n            })}\n            type=\"email\"\n            name=\"email\"\n            id=\"signup-email\"\n          />\n          { errors.email && <p className=\"form-signin__error\">{errors.email.message}</p> }\n        </div>\n        <div className=\"form-signup__item\">\n          <label htmlFor=\"signup-password\">Senha</label>\n          <input\n            ref={register({\n              required: 'Senha é obrigatória',\n              minLength: {\n                value: 6,\n                message: 'A senha deve ter pelo menos 6 caracteres',\n              },\n            })}\n            type=\"password\"\n            name=\"password\"\n            id=\"signup-password\"\n          />\n          { errors.password && <p className=\"form-signin__error\">{errors.password.message}</p> }\n        </div>\n        <input disabled={loading} className=\"form-signup__submit\" type=\"submit\" name=\"Cadastrar\" value={loading ? 'Carregando...' : 'Cadastrar'} />\n        { loading && <Loading />}\n        { message && <p className={`form-signup__message ${showMessage ? ' active' : ''}`}>{message}</p> }\n      </form>\n    </div>\n  );\n};\n\nFormSignup.defaultProps = {\n  handleClick: () => {},\n};\n\nFormSignup.propTypes = {\n  handleClick: PropTypes.func,\n};\n\nexport default FormSignup;\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\n\n// Components\nimport Loading from '../Loading';\n\n// Services\nimport api from '../../services/api';\nimport { login } from '../../services/auth';\n\n// Styles\nimport './style.scss';\n\n/**\n * Esse componente se refere ao formulário responsável por autenticar\n * o usuário, permitindo a ele acesso a aplicação\n */\nconst FormSignin = ({ handleClick }) => {\n  const {\n    register, errors, handleSubmit,\n  } = useForm();\n  const [message, setMessage] = useState('');\n  const [showMessage, setShowMessage] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  /**\n   * Método responsável por realizar a autenticação do usuário\n   *\n   * @memberof FormSignin\n   */\n  async function signinUser(values) {\n    const { email, password } = values;\n    try {\n      setLoading(true);\n      const response = await api.post('/auth/local/', {\n        identifier: email,\n        password,\n      });\n\n      setLoading(false);\n      login(response.data.jwt, response.data.user.username, response.data.user._id);\n      history.push('/tasks');\n    } catch (error) {\n      setLoading(false);\n      setMessage('Erro ao autenticar. Confira os dados digitados.');\n    }\n  }\n\n  useEffect(() => {\n    if (message) {\n      setShowMessage(true);\n      setTimeout(() => {\n        setMessage('');\n        setShowMessage(false);\n      }, 3000);\n    }\n  }, [message]);\n\n  return (\n    <div className=\"signin\">\n      <header>\n        <h3>Acessar conta</h3>\n        <button type=\"button\" data-to=\"0\" onClick={handleClick}>Cadastrar</button>\n      </header>\n      <form className=\"form-signin\" onSubmit={handleSubmit(signinUser)} method=\"post\">\n        <div className=\"form-signin__item\">\n          <label htmlFor=\"signin-email\">E-mail</label>\n          <input\n            ref={register({\n              required: 'E-mail é obrigatório',\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                message: 'E-mail inválido',\n              },\n            })}\n            type=\"email\"\n            name=\"email\"\n            id=\"signin-email\"\n          />\n          { errors.email && <p className=\"form-signin__error\">{errors.email.message}</p> }\n        </div>\n        <div className=\"form-signin__item\">\n          <label htmlFor=\"signin-password\">Senha</label>\n          <input\n            ref={register({\n              required: 'Senha é obrigatória',\n              minLength: {\n                value: 6,\n                message: 'A senha deve ter pelo menos 6 caracteres',\n              },\n            })}\n            type=\"password\"\n            name=\"password\"\n            id=\"signin-password\"\n          />\n          { errors.password && <p className=\"form-signin__error\">{errors.password.message}</p> }\n        </div>\n        <input disabled={loading} className=\"form-signin__submit\" type=\"submit\" name=\"Acessar\" value={loading ? 'Carregando...' : 'Acessar'} />\n        { loading && <Loading />}\n        { message && <p className={`form-signin__message ${showMessage ? ' active' : ''}`}>{message}</p> }\n      </form>\n    </div>\n  );\n};\n\nFormSignin.defaultProps = {\n  handleClick: () => {},\n};\n\nFormSignin.propTypes = {\n  handleClick: PropTypes.func,\n};\n\nexport default FormSignin;\n","/* eslint-disable radix */\nimport React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\n\n// Styles\nimport './style.scss';\n\n/**\n * Esse componente é responsável por criar uma animação de slide\n * entre os formulários de cadastro e login\n */\nconst Slider = ({ children }) => {\n  const sliderList = useRef();\n  const sliderListItem = useRef();\n\n  /**\n   * Método que intercepta o clique do botão que ativa o slide e apresenta o\n   * formulário referente ao data-to localizado nesse mesmo botão\n   *\n   * @memberof Slider\n   */\n  function handleClick(event) {\n    const index = parseInt(event.target.getAttribute('data-to'));\n    const translate = sliderListItem.current.offsetWidth * index;\n    sliderList.current.style.transform = `translateX(-${translate}px)`;\n  }\n\n  return (\n    <div className=\"slider\">\n      <ul ref={sliderList} className=\"slider__list\">\n        {\n          children.map((item) => (\n            <li key={item.type.name} ref={sliderListItem} className=\"slider__list-item\">\n              <item.type handleClick={handleClick} />\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n\nSlider.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Slider;\n","import React from 'react';\n\n// Components\nimport Header from '../../components/Header';\nimport FormSignup from '../../components/FormSignup';\nimport FormSignin from '../../components/FormSignin';\nimport Slider from '../../components/Slider';\n\n// Styles\nimport './style.scss';\n\nconst Home = () => (\n  <main className=\"home\">\n    <Header />\n    <section className=\"home__card\">\n      <div className=\"home__card-image\">\n        <h2>\n          <strong>Venha conhecer</strong>\n          <br />\n          nossa aplicação!\n        </h2>\n      </div>\n      <Slider>\n        <FormSignup />\n        <FormSignin />\n      </Slider>\n    </section>\n  </main>\n);\n\nexport default Home;\n","import React from 'react';\n\n// Assets\nimport banner from '../../assets/images/banner.png';\nimport bannerMobile from '../../assets/images/banner-mobile.png';\n\n// Styles\nimport './style.scss';\n\n/**\n * Componente referente a seção principal da área de administrador\n */\nconst Banner = () => (\n  <section className=\"banner\">\n    <picture>\n      <source media=\"(max-width: 767px)\" srcSet={bannerMobile} title=\"CorpoInc.\" alt=\"CorpoInc.\" />\n      <img src={banner} title=\"CorpoInc.\" alt=\"CorpoInc.\" />\n    </picture>\n  </section>\n);\n\nexport default Banner;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable radix */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\n\n// Components\nimport Loading from '../Loading';\n\n// Services\nimport api from '../../services/api';\nimport { getId } from '../../services/auth';\n\n// Styles\nimport './style.scss';\n\n/**\n * Esse componente se refere ao formulário responsável por adicionar\n * novas tarefas\n */\nconst FormList = ({ formSubmited }) => {\n  const {\n    register, errors, handleSubmit, setValue,\n  } = useForm();\n  const [accept, setAccept] = useState(false);\n  const [message, setMessage] = useState('');\n  const [showMessage, setShowMessage] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  /**\n   * Método responsável por permitir o envio do formulário caso o usuário\n   * aceite os termos\n   *\n   * @memberof FormList\n   */\n  function handleChangeCheck() {\n    setAccept(!accept);\n  }\n\n  /**\n   * Método responsável por criar uma máscara de real a cada vez que o usuário\n   * adiciona um número\n   *\n   * @memberof FormList\n   */\n  function numberToCurrency(value) {\n    if (value) {\n      const decimalValue = parseInt(value.replace(/\\D/g, '')) / 100;\n      return decimalValue.toLocaleString('pt-br', { minimumFractionDigits: 2 });\n    }\n    return '0,00';\n  }\n\n  function currencyToNumber(value) {\n    if (value) {\n      return parseInt(value.replace(/\\D/g, '')) / 100;\n    }\n    return 0;\n  }\n\n  /**\n   * Método responsável por formatar o valor para que ele seja aceito\n   * no lado do servidor\n   *\n   * @memberof FormList\n   */\n  const formatNumber = (number) => parseFloat(number.replace(/\\./g, '').replace(',', '.'));\n\n  /**\n   * Método responsável por registrar uma nova tarefa\n   *\n   * @memberof FormList\n   */\n  async function registerTask(values) {\n    const { value, observation } = values;\n    try {\n      setLoading(true);\n      await api.post('/tasks', {\n        valor: formatNumber(value),\n        observacao: observation,\n        user: getId(),\n      });\n\n      setLoading(false);\n      setMessage('Tarefa cadastrada com sucesso.');\n      formSubmited();\n    } catch (error) {\n      setLoading(false);\n      setMessage('Erro ao cadastrar tarefa');\n    }\n  }\n\n  useEffect(() => {\n    if (message) {\n      setShowMessage(true);\n      setTimeout(() => {\n        setMessage('');\n        setShowMessage(false);\n      }, 3000);\n    }\n  }, [message]);\n\n  return (\n    <form className=\"form-list\" method=\"post\" onSubmit={handleSubmit(registerTask)}>\n      <div className=\"form-list__entry\">\n        <div className=\"form-list__entry-item\">\n          <label htmlFor=\"value\">Valor</label>\n          <div>\n            <span>R$</span>\n            <input\n              ref={register({\n                required: 'Valor obrigatório',\n                validate: {\n                  greaterThanZero: (value) => currencyToNumber(value) > 0 || 'O valor deve ser maior que zero.',\n                },\n              })}\n              maxLength={12}\n              type=\"text\"\n              name=\"value\"\n              id=\"value\"\n              onChange={(event) => setValue('value', numberToCurrency(event.currentTarget.value))}\n            />\n          </div>\n          { errors.value && <p className=\"form-list__error\">{errors.value.message}</p> }\n        </div>\n        <div className=\"form-list__entry-item\">\n          <label htmlFor=\"observation\">Observação</label>\n          <textarea\n            ref={register({\n              required: 'Observação obrigatória',\n              maxLength: {\n                value: 300,\n                message: 'A observação deve ter no máximo 300 caractéres.',\n              },\n            })}\n            rows=\"5\"\n            name=\"observation\"\n            id=\"observation\"\n          />\n          { errors.observation && <p className=\"form-list__error\">{errors.observation.message}</p> }\n        </div>\n      </div>\n      <div className=\"form-list__send\">\n        <div className=\"form-list__checkbox\">\n          <input ref={register} type=\"checkbox\" id=\"check-terms\" name=\"check-terms\" onChange={handleChangeCheck} />\n          <label htmlFor=\"check-terms\">\n            Aceito os termos\n            {' '}\n            <Link to=\"/Termos\" title=\"descritos\">descritos</Link>\n          </label>\n        </div>\n        <input disabled={!accept || loading} className=\"form-list__submit\" type=\"submit\" name=\"Adicionar\" value={loading ? 'Carregando...' : 'Adicionar'} />\n        { loading && <Loading />}\n      </div>\n      { message && <p className={`form-list__message ${showMessage ? ' active' : ''}`}>{message}</p> }\n    </form>\n  );\n};\n\nexport default FormList;\n\nFormList.propTypes = {\n  formSubmited: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// Styles\nimport './style.scss';\n\n/**\n * Componente referente a listagem de tarefas localizada na página do administrador\n */\nconst List = ({ tasks }) => (\n  <div>\n    <h3 className=\"list__title\">Itens</h3>\n    <ul className={`list ${tasks.length > 6 ? 'scroll' : ''}`}>\n      {\n        tasks.map((task) => (\n          <li key={task.id} className=\"list__item\">\n            <p>{task.valor.toLocaleString('pt-BR')}</p>\n            <Link to={`/tasks/${task.id}`}>Detalhes</Link>\n          </li>\n        ))\n      }\n    </ul>\n    <p className={`list__message ${tasks.length === 0 ? 'active' : ''}`}>Nenhum item cadastrado</p>\n  </div>\n);\n\nexport default List;\n\nList.defaultProps = {\n  tasks: [],\n};\n\nList.propTypes = {\n  tasks: PropTypes.arrayOf(PropTypes.object),\n};\n","import React from 'react';\n\n// Styles\nimport './style.scss';\n\nconst Footer = () => (\n  <footer>\n    <p>© CorpInc. é uma marca registrada</p>\n  </footer>\n);\n\nexport default Footer;\n","import React, { useState, useEffect } from 'react';\n\n// Components\nimport Header from '../../components/Header';\nimport Banner from '../../components/Banner';\nimport FormList from '../../components/FormList';\nimport List from '../../components/List';\nimport Footer from '../../components/Footer';\n\n// Services\nimport api from '../../services/api';\nimport { getId } from '../../services/auth';\n\n// Styles\nimport './style.scss';\n\nconst Admin = () => {\n  const [tasks, setTasks] = useState([]);\n\n  async function loadTasks() {\n    const response = await api.get(`/tasks?user=${getId()}`);\n    setTasks(response.data);\n  }\n\n  function formSubmited() {\n    loadTasks();\n  }\n\n  useEffect(() => {\n    loadTasks();\n  }, []);\n\n  return (\n    <main className=\"admin\">\n      <Header />\n      <Banner />\n      <div className=\"container\">\n        <p className=\"admin__description--mobile\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Risus sed vulputate odio ut enim blandit volutpat. Dignissim convallis aenean et tortor at risus viverra. Eget arcu dictum varius duis at consectetur lorem donec. Urna condimentum mattis pellentesque id nibh. Condimentum mattis pellentesque id nibh tortor id aliquet. Nisi quis eleifend quam adipiscing. Tellus in metus vulputate eu scelerisque. Augue interdum velit euismod in pellentesque massa placerat duis ultricies. Elit ullamcorper dignissim cras tincidunt lobortis feugiat vivamus at. Accumsan in nisl nisi scelerisque eu ultrices vitae. Rhoncus aenean vel elit scelerisque mauris. Ut venenatis tellus in metus vulputate. Sagittis aliquam malesuada.</p>\n        <FormList formSubmited={formSubmited} />\n        <p className=\"admin__description--desktop\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Risus sed vulputate odio ut enim blandit volutpat. Dignissim convallis aenean et tortor at risus viverra. Eget arcu dictum varius duis at consectetur lorem donec. Urna condimentum mattis pellentesque id nibh. Condimentum mattis pellentesque id nibh tortor id aliquet. Nisi quis eleifend quam adipiscing. Tellus in metus vulputate eu scelerisque. Augue interdum velit euismod in pellentesque massa placerat duis ultricies. Elit ullamcorper dignissim cras tincidunt lobortis feugiat vivamus at. Accumsan in nisl nisi scelerisque eu ultrices vitae. Rhoncus aenean vel elit scelerisque mauris. Ut venenatis tellus in metus vulputate. Sagittis aliquam malesuada.</p>\n        <List tasks={tasks} />\n      </div>\n      <Footer />\n    </main>\n  );\n};\n\nexport default Admin;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\n// Components\nimport Banner from '../../components/Banner';\nimport Header from '../../components/Header';\n\n// Services\nimport api from '../../services/api';\n\n// Styles\nimport './style.scss';\n\nconst Task = () => {\n  const [task, setTask] = useState({});\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function loadTask() {\n      const response = await api.get(`/tasks/${id}`);\n      setTask(response.data);\n    }\n\n    loadTask();\n  }, []);\n\n  return (\n    <main>\n      <Header />\n      <Banner />\n      <div className=\"container\">\n        <article className=\"task\" key={task.id}>\n          <h2 className=\"task__title\">{task.valor}</h2>\n          <p className=\"task__description\">{task.observacao}</p>\n        </article>\n      </div>\n    </main>\n  );\n};\n\nexport default Task;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n// Assets\nimport errorImage from '../../assets/images/404.png';\n\n// Styles\nimport './style.scss';\n\nconst NotFound = () => (\n  <main className=\"not-found\">\n    <div className=\"not-found__card\">\n      <img src={errorImage} title=\"Erro 404\" alt=\"Erro 404\" />\n      <h2>\n        <strong>Ops!</strong>\n        {' '}\n        Ocorreu um erro.\n      </h2>\n      <p>Não conseguimos encontrar a página acessada</p>\n      <Link to=\"/\">Voltar a Home</Link>\n    </div>\n  </main>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport {\n  Route, Redirect, BrowserRouter, Switch,\n} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n// Pages\nimport Home from './pages/Home';\nimport Admin from './pages/Admin';\nimport Task from './pages/Task';\nimport NotFound from './pages/404';\n\n// Services\nimport { isAuthenticated } from './services/auth';\n\nconst Routes = () => (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Switch>\n      <HomeRoute exact path=\"/\" component={Home} />\n      <PrivateRoute exact path=\"/tasks\" component={Admin} />\n      <PrivateRoute path=\"/tasks/:id\" component={Task} />\n      <Route path=\"*\" component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) => (isAuthenticated() ? (\n      <Component {...props} />\n    ) : (\n      <Redirect\n        to={{\n          pathname: '/',\n        }}\n      />\n    ))}\n  />\n);\n\nPrivateRoute.propTypes = {\n  component: PropTypes.func.isRequired\n};\n\nconst HomeRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) => (isAuthenticated() ? (\n      <Redirect to=\"/tasks\" />\n    ) : (\n      <Component {...props} />\n    ))}\n  />\n);\n\nHomeRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n};\n\nexport default Routes;\n","import React from 'react';\nimport Routes from './routes';\nimport './App.scss';\n\nconst App = () => <Routes />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}